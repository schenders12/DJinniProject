// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from EO_API.djinni

#pragma once

#include "LensSerialIRZoom_s.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class LensSerialIRZoomS final {
public:
    using CppType = ::eo_api::LensSerialIRZoomS;
    using JniType = jobject;

    using Boxed = LensSerialIRZoomS;

    ~LensSerialIRZoomS();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    LensSerialIRZoomS();
    friend ::djinni::JniClass<LensSerialIRZoomS>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/srcinc/eo_api/LensSerialIRZoomS") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(SBBBBBBBBBBBBSSSDDDS)V") };
    const jfieldID field_LensType { ::djinni::jniGetFieldID(clazz.get(), "LensType", "S") };
    const jfieldID field_VideoSource { ::djinni::jniGetFieldID(clazz.get(), "VideoSource", "B") };
    const jfieldID field_SerialPort { ::djinni::jniGetFieldID(clazz.get(), "SerialPort", "B") };
    const jfieldID field_ZoomCmd { ::djinni::jniGetFieldID(clazz.get(), "ZoomCmd", "B") };
    const jfieldID field_ZoomCal { ::djinni::jniGetFieldID(clazz.get(), "ZoomCal", "B") };
    const jfieldID field_FocusCmd { ::djinni::jniGetFieldID(clazz.get(), "FocusCmd", "B") };
    const jfieldID field_Polarity { ::djinni::jniGetFieldID(clazz.get(), "Polarity", "B") };
    const jfieldID field_AGC { ::djinni::jniGetFieldID(clazz.get(), "AGC", "B") };
    const jfieldID field_DayMode { ::djinni::jniGetFieldID(clazz.get(), "DayMode", "B") };
    const jfieldID field_HighSensitivity { ::djinni::jniGetFieldID(clazz.get(), "HighSensitivity", "B") };
    const jfieldID field_AutoCalibration { ::djinni::jniGetFieldID(clazz.get(), "AutoCalibration", "B") };
    const jfieldID field_LensCover { ::djinni::jniGetFieldID(clazz.get(), "LensCover", "B") };
    const jfieldID field_FlirMenuCommand { ::djinni::jniGetFieldID(clazz.get(), "FlirMenuCommand", "B") };
    const jfieldID field_ManualGain { ::djinni::jniGetFieldID(clazz.get(), "ManualGain", "S") };
    const jfieldID field_ManualOffset { ::djinni::jniGetFieldID(clazz.get(), "ManualOffset", "S") };
    const jfieldID field_NonUniformityCorrectionTable { ::djinni::jniGetFieldID(clazz.get(), "NonUniformityCorrectionTable", "S") };
    const jfieldID field_ZoomFov { ::djinni::jniGetFieldID(clazz.get(), "ZoomFov", "D") };
    const jfieldID field_MinFov { ::djinni::jniGetFieldID(clazz.get(), "MinFov", "D") };
    const jfieldID field_MaxFov { ::djinni::jniGetFieldID(clazz.get(), "MaxFov", "D") };
    const jfieldID field_FocusPosition { ::djinni::jniGetFieldID(clazz.get(), "FocusPosition", "S") };
};

}  // namespace djinni_generated
