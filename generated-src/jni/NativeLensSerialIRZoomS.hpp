// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from EO_API.djinni

#pragma once

#include "LensSerialIRZoom_s.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeLensSerialIRZoomS final {
public:
    using CppType = ::helloworld::LensSerialIRZoomS;
    using JniType = jobject;

    using Boxed = NativeLensSerialIRZoomS;

    ~NativeLensSerialIRZoomS();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeLensSerialIRZoomS();
    friend ::djinni::JniClass<NativeLensSerialIRZoomS>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/mycompany/helloworld/LensSerialIRZoomS") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(SBBBBBBBBBBBBSSSDDDS)V") };
    const jfieldID field_mLensType { ::djinni::jniGetFieldID(clazz.get(), "mLensType", "S") };
    const jfieldID field_mVideoSource { ::djinni::jniGetFieldID(clazz.get(), "mVideoSource", "B") };
    const jfieldID field_mSerialPort { ::djinni::jniGetFieldID(clazz.get(), "mSerialPort", "B") };
    const jfieldID field_mZoomCmd { ::djinni::jniGetFieldID(clazz.get(), "mZoomCmd", "B") };
    const jfieldID field_mZoomCal { ::djinni::jniGetFieldID(clazz.get(), "mZoomCal", "B") };
    const jfieldID field_mFocusCmd { ::djinni::jniGetFieldID(clazz.get(), "mFocusCmd", "B") };
    const jfieldID field_mPolarity { ::djinni::jniGetFieldID(clazz.get(), "mPolarity", "B") };
    const jfieldID field_mAGC { ::djinni::jniGetFieldID(clazz.get(), "mAGC", "B") };
    const jfieldID field_mDayMode { ::djinni::jniGetFieldID(clazz.get(), "mDayMode", "B") };
    const jfieldID field_mHighSensitivity { ::djinni::jniGetFieldID(clazz.get(), "mHighSensitivity", "B") };
    const jfieldID field_mAutoCalibration { ::djinni::jniGetFieldID(clazz.get(), "mAutoCalibration", "B") };
    const jfieldID field_mLensCover { ::djinni::jniGetFieldID(clazz.get(), "mLensCover", "B") };
    const jfieldID field_mFlirMenuCommand { ::djinni::jniGetFieldID(clazz.get(), "mFlirMenuCommand", "B") };
    const jfieldID field_mManualGain { ::djinni::jniGetFieldID(clazz.get(), "mManualGain", "S") };
    const jfieldID field_mManualOffset { ::djinni::jniGetFieldID(clazz.get(), "mManualOffset", "S") };
    const jfieldID field_mNonUniformityCorrectionTable { ::djinni::jniGetFieldID(clazz.get(), "mNonUniformityCorrectionTable", "S") };
    const jfieldID field_mZoomFov { ::djinni::jniGetFieldID(clazz.get(), "mZoomFov", "D") };
    const jfieldID field_mMinFov { ::djinni::jniGetFieldID(clazz.get(), "mMinFov", "D") };
    const jfieldID field_mMaxFov { ::djinni::jniGetFieldID(clazz.get(), "mMaxFov", "D") };
    const jfieldID field_mFocusPosition { ::djinni::jniGetFieldID(clazz.get(), "mFocusPosition", "S") };
};

}  // namespace djinni_generated
