// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from EO_API.djinni

package com.mycompany.helloworld;

/** EO_API.djinni : IDL source for EO_API */
public final class LensSerialZoomS {


    /*package*/ final short mLensType;

    /*package*/ final byte mLensID;

    /*package*/ final byte mVideoSource;

    /*package*/ final byte mSerialPort;

    /*package*/ final byte mZoomCmd;

    /*package*/ final byte mFocusCmd;

    /*package*/ final byte mIrisCmd;

    /*package*/ final byte mIrisAuto;

    /*package*/ final byte mZoomCal;

    /*package*/ final byte mUseOldProtocol;

    /*package*/ final byte mEnable2X;

    /*package*/ final double mZoomFov;

    /*package*/ final double mMinFov;

    /*package*/ final double mMaxFov;

    /*package*/ final short mFocusPosition;

    public LensSerialZoomS(
            short LensType,
            byte LensID,
            byte VideoSource,
            byte SerialPort,
            byte ZoomCmd,
            byte FocusCmd,
            byte IrisCmd,
            byte IrisAuto,
            byte ZoomCal,
            byte UseOldProtocol,
            byte Enable2X,
            double ZoomFov,
            double MinFov,
            double MaxFov,
            short FocusPosition) {
        this.mLensType = LensType;
        this.mLensID = LensID;
        this.mVideoSource = VideoSource;
        this.mSerialPort = SerialPort;
        this.mZoomCmd = ZoomCmd;
        this.mFocusCmd = FocusCmd;
        this.mIrisCmd = IrisCmd;
        this.mIrisAuto = IrisAuto;
        this.mZoomCal = ZoomCal;
        this.mUseOldProtocol = UseOldProtocol;
        this.mEnable2X = Enable2X;
        this.mZoomFov = ZoomFov;
        this.mMinFov = MinFov;
        this.mMaxFov = MaxFov;
        this.mFocusPosition = FocusPosition;
    }

    public short getLensType() {
        return mLensType;
    }

    /** lens type */
    public byte getLensID() {
        return mLensID;
    }

    public byte getVideoSource() {
        return mVideoSource;
    }

    /** video source lens is connected to */
    public byte getSerialPort() {
        return mSerialPort;
    }

    /** tracker serial port lens is connected to (3-7, 0-2 are reserved) */
    public byte getZoomCmd() {
        return mZoomCmd;
    }

    /** zoom command (0=none, 1=narrow, 2=wide, 3=go to pos) */
    public byte getFocusCmd() {
        return mFocusCmd;
    }

    /** focus command (0=none, 1=near, 2=far, 3=go to pos) */
    public byte getIrisCmd() {
        return mIrisCmd;
    }

    /** iris command (0=none, 1=close, 2=open) */
    public byte getIrisAuto() {
        return mIrisAuto;
    }

    /** automatic iris (0=disabled, 1=enabled/automatic) */
    public byte getZoomCal() {
        return mZoomCal;
    }

    /** perform zoom scale calibration (1=run now) */
    public byte getUseOldProtocol() {
        return mUseOldProtocol;
    }

    /** use older lens communication protocol (LENS_COHU_MPC) */
    public byte getEnable2X() {
        return mEnable2X;
    }

    /** enable 2X extender (LENS_FUJINON_D60) */
    public double getZoomFov() {
        return mZoomFov;
    }

    /**
     * zoom field-of-view in degrees
     *   range: 0 to 360.00 (divide by 100 to get value)
     */
    public double getMinFov() {
        return mMinFov;
    }

    /**
     * minimum zoom field-of-view of the lens in degrees
     *   range: 0 to 360.00 (divide by 100 to get value)
     */
    public double getMaxFov() {
        return mMaxFov;
    }

    /**
     * maximum zoom field-of-view of the lens in degrees
     *   range: 0 to 360.00 (divide by 100 to get value)
     * focus position
     */
    public short getFocusPosition() {
        return mFocusPosition;
    }

    @Override
    public String toString() {
        return "LensSerialZoomS{" +
                "mLensType=" + mLensType +
                "," + "mLensID=" + mLensID +
                "," + "mVideoSource=" + mVideoSource +
                "," + "mSerialPort=" + mSerialPort +
                "," + "mZoomCmd=" + mZoomCmd +
                "," + "mFocusCmd=" + mFocusCmd +
                "," + "mIrisCmd=" + mIrisCmd +
                "," + "mIrisAuto=" + mIrisAuto +
                "," + "mZoomCal=" + mZoomCal +
                "," + "mUseOldProtocol=" + mUseOldProtocol +
                "," + "mEnable2X=" + mEnable2X +
                "," + "mZoomFov=" + mZoomFov +
                "," + "mMinFov=" + mMinFov +
                "," + "mMaxFov=" + mMaxFov +
                "," + "mFocusPosition=" + mFocusPosition +
        "}";
    }

}
